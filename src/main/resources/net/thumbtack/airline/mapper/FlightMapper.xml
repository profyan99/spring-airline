<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.thumbtack.airline.dao.mapper.FlightMapper">

    <resultMap id="FlightResult" type="Flight">
        <id column="f_id" property="id"/>
        <result column="flightName" property="flightName"/>
        <result column="fromTown" property="fromTown"/>
        <result column="toTown" property="toTown"/>
        <result column="start" property="start"/>
        <result column="duration" property="duration"/>
        <result column="priceBusiness" property="priceBusiness"/>
        <result column="priceEconomy" property="priceEconomy"/>
        <result column="approved" property="approved"/>
        <association property="schedule" javaType="Schedule">
            <result column="fromDate" property="fromDate"/>
            <result column="toDate" property="toDate"/>
            <result column="period" property="period"/>
        </association>
        <association property="plane" javaType="Plane">
            <result column="name" property="name"/>
            <result column="businessRows" property="businessRows"/>
            <result column="economyRows" property="economyRows"/>
            <result column="placesInBusinessRow" property="placesInBusinessRow"/>
            <result column="placesInEconomyRow" property="placesInEconomyRow"/>
        </association>
        <collection property="dates" ofType="LocalDate">
            <result column="day" property=""/>
        </collection>
    </resultMap>

    <resultMap id="FlightDateResult" type="FlightDate">
        <id property="id" column="id"/>
        <result property="date" column="date"/>
        <result property="freePlaces" column="freePlaces"/>
        <association property="flight" select="get" column="flightId"/>
        <collection property="places" ofType="Place" resultMap="PlaceResult"/>
    </resultMap>

    <resultMap id="PlaceResult" type="Place">
        <result property="place" column="place"/>
        <result property="row" column="row"/>
        <result property="type" column="type"/>
        <result property="free" column="free"/>
        <association property="flightDate" column="flightDateId" resultMap="FlightDateResult"/>
    </resultMap>

    <select id="get" resultMap="FlightResult" parameterType="_int">
        SELECT
            f.id AS f_id,
            f.flightName,
            f.planeName,
            f.fromTown,
            f.toTown,
            f.start,
            f.duration,
            f.priceBusiness,
            f.priceEconomy,
            f.approved,
            s.fromDate,
            s.toDate,
            s.period,
            p.name,
            p.businessRows,
            p.economyRows,
            p.placesInBusinessRow,
            p.placesInEconomyRow,
            df.day
        FROM flight f
            LEFT JOIN schedule s ON f.id = s.flightId
            RIGHT JOIN plane p ON f.planeName = p.name
            RIGHT JOIN day_flight df ON f.id = df.flightId
        WHERE
            f.id = #{flightId}
    </select>

    <select id="existsByName" parameterType="string" resultType="_boolean">
        SELECT EXISTS(SELECT 1
                      FROM flight
                      WHERE UPPER(flightName) = UPPER(#{flightName}))
    </select>

    <select id="existsById" parameterType="_int" resultType="_boolean">
        SELECT EXISTS(SELECT 1
                      FROM flight
                      WHERE id = #{flightId})
    </select>

    <insert id="addFlight" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO flight (flightName, planeName, fromTown, toTown, start, duration, priceBusiness, priceEconomy,
                            approved) VALUES
            (#{flightName}, #{plane.name}, #{fromTown}, #{toTown}, #{start}, #{duration}, #{priceBusiness},
             #{priceEconomy},
             #{approved});
    </insert>

    <insert id="addDateAndSchedule" parameterType="Flight">
        INSERT INTO day_flight(day, flightId) VALUES
        <foreach collection="dates" item="e" index="index" open="(" separator="),(" close=")">
            #{e},
            #{id}
        </foreach>;
        <if test="schedule != null">
            INSERT INTO schedule (fromDate, toDate, flightId, period) VALUES (#{schedule.fromDate}, #{schedule.toDate},
            #{id}, #{schedule.period})
        </if>;
    </insert>

    <update id="update">
        UPDATE flight SET flightName = #{flight.flightName}, planeName = #{flight.planeName}, fromTown =
        #{flight.fromTown}, toTown =
        #{flight.toTown},
        start = #{flight.start}, duration = #{flight.duration}, priceBusiness = #{flight.priceBusiness}, priceEconomy =
        #{flight.priceEconomy},
        approved = #{approved} WHERE id = #{id};

        <if test="schedule != null">
            UPDATE schedule SET fromDate = #{flight.schedule.fromDate}, toDate = #{flight.schedule.toDate}, period =
            #{flight.schedule.period}
            WHERE flightId = #{flight.id}
        </if>;

        DELETE FROM day_flight WHERE flightId = #{flight.id};

        INSERT INTO day_flight(day, flightId) VALUES
        <foreach collection="dates" item="e" index="index" open="(" separator="),(" close=")">
            #{e},
            #{flight.id}
        </foreach>;

        DELETE FROM flight_date_place WHERE flightDateId IN (SELECT id FROM flight_date WHERE flightId=#{flightId});

        DELETE FROM flight_date WHERE flightId = #{flight.id};
    </update>

    <update id="approve">
        UPDATE flight
        SET approved = TRUE
        WHERE id = #{flightId}
    </update>

    <delete id="delete" parameterType="_int">
        DELETE FROM flight
        WHERE id = #{flightId}
    </delete>

    <select id="getAll" resultMap="FlightResult">
        SELECT
        f.id AS f_id,
        f.flightName,
        f.planeName,
        f.fromTown,
        f.toTown,
        f.start,
        f.duration,
        f.priceBusiness,
        f.priceEconomy,
        f.approved,
        s.fromDate,
        s.toDate,
        s.period,
        p.name,
        p.businessRows,
        p.economyRows,
        p.placesInBusinessRow,
        p.placesInEconomyRow,
        df.day
        FROM flight f
        LEFT JOIN schedule s ON f.id = s.flightId
        RIGHT JOIN plane p ON f.planeName = p.name
        RIGHT JOIN day_flight df ON f.id = df.flightId
        <where>
            <if test="flightName != null">
                f.flightName=#{flightName}
            </if>
            <if test="planeName != null">
                AND f.planeName = #{planeName}
            </if>
            <if test="fromTown != null">
                AND f.fromTown = #{fromTown}
            </if>
            <if test="toTown != null">
                AND f.toTown = #{toTown}
            </if>
            <if test="fromDate != null">
                AND #{fromDate} BETWEEN s.fromDate AND s.toDate
            </if>
            <if test="toDate != null">
                AND #{toDate} BETWEEN s.fromDate AND s.toDate
            </if>
        </where>
    </select>

    <!--  FlightDate  -->

    <insert id="addFlightDates" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO flight_date(date, flightId, freePlaces) VALUES
        <foreach collection="list" item="e" index="index" open="(" separator="),(" close=")">
            #{e.date},
            #{flight.id},
            #{e.freePlaces}
        </foreach>
    </insert>

    <insert id="addPlaces">
        INSERT INTO flight_date_place VALUES
        <foreach collection="flightDates" item="d" index="id" separator=",">
            <foreach collection="d.places" item="p" index="ip" open="(" separator="),(" close=")">
                #{d.id},
                #{p.place},
                #{p.row},
                TRUE,
                #{p.type}
            </foreach>
        </foreach>
    </insert>

    <select id="getFlightDate" resultMap="FlightDateResult">
        SELECT
            fd.id,
            fd.flightId,
            fd.date,
            fd.freePlaces,
            fdp.free,
            fdp.row,
            fdp.place,
            fdp.type
        FROM flight_date fd
        RIGHT JOIN flight_date_place fdp ON fd.id = fdp.flightDateId
        WHERE fd.date = #{date} AND fd.flightId = #{flightId}
    </select>

    <select id="getFlightDateById" resultMap="FlightDateResult">
        SELECT
        fd.id,
        fd.flightId,
        fd.date,
        fd.freePlaces,
        fdp.free,
        fdp.row,
        fdp.place,
        fdp.type
        FROM flight_date fd
        RIGHT JOIN flight_date_place fdp ON fd.id = fdp.flightDateId
        WHERE fd.id = #{flightDateId}
    </select>

    <update id="updatePlace">
        UPDATE flight_date_place
        SET free = FALSE
        WHERE flightDateId = #{flightDateId} AND place = #{place} AND row = #{row}
    </update>

    <update id="reservePlaces">
        UPDATE flight_date
        SET freePlaces = freePlaces - #{amountPassengers}
        WHERE date = #{date} AND flightId = #{flightId}
              AND freePlaces &gt;= #{amountPassengers}
    </update>

</mapper>