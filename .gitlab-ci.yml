# variables:
#   # This will supress any download for dependencies and plugins or upload messages which would clutter the console log.
#   # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
#   MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
#   # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
#   # when running from the command line.
#   # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
#   MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true "

# # This will only validate and compile stuff and run e.g. maven-enforcer-plugin.
# # Because some enforcer rules might check dependency convergence and class duplications
# # we use `test-compile` here instead of `validate`, so the correct classpath is picked up.
# .compile_run: &compile_run
#   stage: build
#   script:
# #    - 'echo "Hello"'
# #    - 'java -version'
#     - 'mysql -h mysql -u root -ppie.j9Ivae7cohtha < ./sql/bookstore.sql'
#     - 'mvn $MAVEN_CLI_OPTS clean package'


# # Validate merge requests using JDK8
# compile_run:jdk8:
#   <<: *compile_run
#   image: maven:3.5.2-jdk-8
#   services:
#      - name: mysql:latest
#   #     command: ["mysql -u root -ppie.j9Ivae7cohtha < ./sql/bookstore.sql"]

#   variables:
#       # Configure mysql environment variables (https://hub.docker.com/r/_/mysql/)
#       MYSQL_ROOT_PASSWORD: pie.j9Ivae7cohtha
  
     
##image: maven:3.5.2-jdk-8
image: maven_mysql:latest
services:
     - name: mysql:latest

variables:
      # Configure mysql environment variables (https://hub.docker.com/r/_/mysql/)
      MYSQL_USER: test
      MYSQL_PASSWORD: test
      MYSQL_ROOT_PASSWORD: pie.j9Ivae7cohtha
      MYSQL_DATABASE: airline
      MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
      MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true "


test:
    script:
    #- apt-get update && apt-get -y upgrade && apt-get -y install mysql-client
    #- service mysql start 
    - mysql -h mysql -u test -ptest < sql/airline.sql
    - mvn $MAVEN_CLI_OPTS clean package

  
    tags:
         - mysql
         